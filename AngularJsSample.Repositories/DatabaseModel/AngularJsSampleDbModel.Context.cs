//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AngularJsSample.Repositories.DatabaseModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AngularJsSampleDbEntities : DbContext
    {
        public AngularJsSampleDbEntities()
            : base("name=AngularJsSampleDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Movie> Movies { get; set; }
        public virtual DbSet<MoviePerson> MoviePersons { get; set; }
        public virtual DbSet<MovieRating> MovieRatings { get; set; }
        public virtual DbSet<UserInfo> UserInfoes { get; set; }
        public virtual DbSet<Genre> Genres { get; set; }
    
        public virtual int MoviePerson_Delete(Nullable<int> id, Nullable<int> userLastModified)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userLastModifiedParameter = userLastModified.HasValue ?
                new ObjectParameter("UserLastModified", userLastModified) :
                new ObjectParameter("UserLastModified", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MoviePerson_Delete", idParameter, userLastModifiedParameter);
        }
    
        public virtual int MoviePerson_Insert(string firstName, string lastName, Nullable<System.DateTimeOffset> birthday, string birthPlace, string biography, Nullable<int> userCreated, string photoUrl, string iMDBUrl, Nullable<int> popularity)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTimeOffset));
    
            var birthPlaceParameter = birthPlace != null ?
                new ObjectParameter("BirthPlace", birthPlace) :
                new ObjectParameter("BirthPlace", typeof(string));
    
            var biographyParameter = biography != null ?
                new ObjectParameter("Biography", biography) :
                new ObjectParameter("Biography", typeof(string));
    
            var userCreatedParameter = userCreated.HasValue ?
                new ObjectParameter("UserCreated", userCreated) :
                new ObjectParameter("UserCreated", typeof(int));
    
            var photoUrlParameter = photoUrl != null ?
                new ObjectParameter("PhotoUrl", photoUrl) :
                new ObjectParameter("PhotoUrl", typeof(string));
    
            var iMDBUrlParameter = iMDBUrl != null ?
                new ObjectParameter("IMDBUrl", iMDBUrl) :
                new ObjectParameter("IMDBUrl", typeof(string));
    
            var popularityParameter = popularity.HasValue ?
                new ObjectParameter("Popularity", popularity) :
                new ObjectParameter("Popularity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MoviePerson_Insert", firstNameParameter, lastNameParameter, birthdayParameter, birthPlaceParameter, biographyParameter, userCreatedParameter, photoUrlParameter, iMDBUrlParameter, popularityParameter);
        }
    
        public virtual int MoviePerson_Save(Nullable<int> id, string firstName, string lastName, string birthPlace, Nullable<System.DateTimeOffset> birthday, string biography, string photoUrl, string iMDBUrl, Nullable<int> popularity, Nullable<int> userLastModified)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthPlaceParameter = birthPlace != null ?
                new ObjectParameter("BirthPlace", birthPlace) :
                new ObjectParameter("BirthPlace", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTimeOffset));
    
            var biographyParameter = biography != null ?
                new ObjectParameter("Biography", biography) :
                new ObjectParameter("Biography", typeof(string));
    
            var photoUrlParameter = photoUrl != null ?
                new ObjectParameter("PhotoUrl", photoUrl) :
                new ObjectParameter("PhotoUrl", typeof(string));
    
            var iMDBUrlParameter = iMDBUrl != null ?
                new ObjectParameter("IMDBUrl", iMDBUrl) :
                new ObjectParameter("IMDBUrl", typeof(string));
    
            var popularityParameter = popularity.HasValue ?
                new ObjectParameter("Popularity", popularity) :
                new ObjectParameter("Popularity", typeof(int));
    
            var userLastModifiedParameter = userLastModified.HasValue ?
                new ObjectParameter("UserLastModified", userLastModified) :
                new ObjectParameter("UserLastModified", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MoviePerson_Save", idParameter, firstNameParameter, lastNameParameter, birthPlaceParameter, birthdayParameter, biographyParameter, photoUrlParameter, iMDBUrlParameter, popularityParameter, userLastModifiedParameter);
        }
    
        public virtual ObjectResult<MoviePerson_Get_Result> MoviePerson_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MoviePerson_Get_Result>("MoviePerson_Get");
        }
    
        public virtual ObjectResult<MoviePerson_GetDateCreated_Result> MoviePerson_GetDateCreated()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MoviePerson_GetDateCreated_Result>("MoviePerson_GetDateCreated");
        }
    
        public virtual ObjectResult<GenreData_Get_Result> GenreData_Get(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenreData_Get_Result>("GenreData_Get", idParameter);
        }
    
        public virtual ObjectResult<Genres_Get_Result> Genres_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Genres_Get_Result>("Genres_Get");
        }
    
        public virtual ObjectResult<MoviePersonData_Get_Result> MoviePersonData_Get(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MoviePersonData_Get_Result>("MoviePersonData_Get", idParameter);
        }
    
        public virtual int Genre_Delete(Nullable<int> id, Nullable<int> userLastModified)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userLastModifiedParameter = userLastModified.HasValue ?
                new ObjectParameter("UserLastModified", userLastModified) :
                new ObjectParameter("UserLastModified", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Genre_Delete", idParameter, userLastModifiedParameter);
        }
    
        public virtual int Genre_Save(Nullable<int> id, string name, string description, Nullable<int> userLastModified)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var userLastModifiedParameter = userLastModified.HasValue ?
                new ObjectParameter("UserLastModified", userLastModified) :
                new ObjectParameter("UserLastModified", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Genre_Save", idParameter, nameParameter, descriptionParameter, userLastModifiedParameter);
        }
    
        public virtual int Genre_Insert(string name, string description, Nullable<int> userCreated)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var userCreatedParameter = userCreated.HasValue ?
                new ObjectParameter("UserCreated", userCreated) :
                new ObjectParameter("UserCreated", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Genre_Insert", nameParameter, descriptionParameter, userCreatedParameter);
        }
    
        public virtual ObjectResult<Movies_Get_Result> Movies_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Movies_Get_Result>("Movies_Get");
        }
    
        public virtual int Movie_Delete(Nullable<int> id, Nullable<int> userLastModified)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userLastModifiedParameter = userLastModified.HasValue ?
                new ObjectParameter("UserLastModified", userLastModified) :
                new ObjectParameter("UserLastModified", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Movie_Delete", idParameter, userLastModifiedParameter);
        }
    
        public virtual int Movie_Insert(string name, Nullable<System.DateTimeOffset> releaseDate, string description, Nullable<int> userCreated, string posterUrl, string iMDBUrl, Nullable<int> rating)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var releaseDateParameter = releaseDate.HasValue ?
                new ObjectParameter("ReleaseDate", releaseDate) :
                new ObjectParameter("ReleaseDate", typeof(System.DateTimeOffset));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var userCreatedParameter = userCreated.HasValue ?
                new ObjectParameter("UserCreated", userCreated) :
                new ObjectParameter("UserCreated", typeof(int));
    
            var posterUrlParameter = posterUrl != null ?
                new ObjectParameter("PosterUrl", posterUrl) :
                new ObjectParameter("PosterUrl", typeof(string));
    
            var iMDBUrlParameter = iMDBUrl != null ?
                new ObjectParameter("IMDBUrl", iMDBUrl) :
                new ObjectParameter("IMDBUrl", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Movie_Insert", nameParameter, releaseDateParameter, descriptionParameter, userCreatedParameter, posterUrlParameter, iMDBUrlParameter, ratingParameter);
        }
    
        public virtual int Movie_Save(Nullable<int> id, string name, Nullable<System.DateTimeOffset> releaseDate, string description, string posterUrl, string iMDBUrl, Nullable<int> rating, Nullable<int> userLastModified)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var releaseDateParameter = releaseDate.HasValue ?
                new ObjectParameter("ReleaseDate", releaseDate) :
                new ObjectParameter("ReleaseDate", typeof(System.DateTimeOffset));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var posterUrlParameter = posterUrl != null ?
                new ObjectParameter("PosterUrl", posterUrl) :
                new ObjectParameter("PosterUrl", typeof(string));
    
            var iMDBUrlParameter = iMDBUrl != null ?
                new ObjectParameter("IMDBUrl", iMDBUrl) :
                new ObjectParameter("IMDBUrl", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var userLastModifiedParameter = userLastModified.HasValue ?
                new ObjectParameter("UserLastModified", userLastModified) :
                new ObjectParameter("UserLastModified", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Movie_Save", idParameter, nameParameter, releaseDateParameter, descriptionParameter, posterUrlParameter, iMDBUrlParameter, ratingParameter, userLastModifiedParameter);
        }
    
        public virtual int Rating_Insert(Nullable<int> movieId, Nullable<int> userRatedId, Nullable<int> userCreated, Nullable<int> rating)
        {
            var movieIdParameter = movieId.HasValue ?
                new ObjectParameter("MovieId", movieId) :
                new ObjectParameter("MovieId", typeof(int));
    
            var userRatedIdParameter = userRatedId.HasValue ?
                new ObjectParameter("userRatedId", userRatedId) :
                new ObjectParameter("userRatedId", typeof(int));
    
            var userCreatedParameter = userCreated.HasValue ?
                new ObjectParameter("UserCreated", userCreated) :
                new ObjectParameter("UserCreated", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rating_Insert", movieIdParameter, userRatedIdParameter, userCreatedParameter, ratingParameter);
        }
    
        public virtual int Rating_Save(Nullable<int> movieId, Nullable<int> userRatedId, Nullable<int> rating)
        {
            var movieIdParameter = movieId.HasValue ?
                new ObjectParameter("MovieId", movieId) :
                new ObjectParameter("MovieId", typeof(int));
    
            var userRatedIdParameter = userRatedId.HasValue ?
                new ObjectParameter("UserRatedId", userRatedId) :
                new ObjectParameter("UserRatedId", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rating_Save", movieIdParameter, userRatedIdParameter, ratingParameter);
        }
    
        public virtual ObjectResult<MovieData_Get_Result> MovieData_Get(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovieData_Get_Result>("MovieData_Get", idParameter);
        }
    
        public virtual ObjectResult<GenresFromMovie_Get_Result> GenresFromMovie_Get(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenresFromMovie_Get_Result>("GenresFromMovie_Get", idParameter);
        }
    
        public virtual int MovieIdGenreId_Delete(Nullable<int> movieId, Nullable<int> genreId)
        {
            var movieIdParameter = movieId.HasValue ?
                new ObjectParameter("MovieId", movieId) :
                new ObjectParameter("MovieId", typeof(int));
    
            var genreIdParameter = genreId.HasValue ?
                new ObjectParameter("GenreId", genreId) :
                new ObjectParameter("GenreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MovieIdGenreId_Delete", movieIdParameter, genreIdParameter);
        }
    
        public virtual int MovieIdGenreId_Save(Nullable<int> movieId, Nullable<int> genreId)
        {
            var movieIdParameter = movieId.HasValue ?
                new ObjectParameter("MovieId", movieId) :
                new ObjectParameter("MovieId", typeof(int));
    
            var genreIdParameter = genreId.HasValue ?
                new ObjectParameter("GenreId", genreId) :
                new ObjectParameter("GenreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MovieIdGenreId_Save", movieIdParameter, genreIdParameter);
        }
    }
}
